services:
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d products_db"]
      interval: 10s
      timeout: 5s
      retries: 4
      start_period: 10s

  purchase_service:
    container_name: purchase_service
    build: 
      context: ./purchase_service
    ports:
      - "8000:8000"
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./purchase_service/configs:/app/configs
      - ./purchase_service/models:/app/models

  elasticsearch:
    image: elasticsearch:8.12.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - logger.level=ERROR
      - TINI_SUBREAPER=true
      - TZ=UTC
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: curl --fail http://localhost:9200/_cluster/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 4
      start_period: 10s
    init: true

  search_service:
    container_name: search_service
    build: 
      context: ./search_service
    ports:
      - "8001:8001"
    env_file: .env
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./search_service/configs:/app/configs
      - ./search_service/models:/app/models

  etl_process:
    container_name: ETL
    build:
      context: ./ETL
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./ETL/configs:/app/configs
      - ./ETL/models:/app/models 

  admin_panel:
    container_name: admin_panel
    build:
      context: ./admin_panel
    ports:
      - "8002:8002"
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./admin_panel/configs:/app/configs
      - ./admin_panel/models:/app/models

volumes:
  postgres_data:
  es_data: